import{isNullOrWhiteSpaces,returnScrollbarWidth}from"./general.js";export default class ModalWindowMenu{constructor(o,e,l,t){if(isNullOrWhiteSpaces(o,e))throw new Error("[MODALWINDOW] Incorrect arguments!");t&&(ModalWindowMenu.fsMenuClasslist=document.querySelector(t).classList),ModalWindowMenu.transitionTimeout=l,ModalWindowMenu.modalLinks=document.querySelectorAll(o);for(let d of ModalWindowMenu.modalLinks)d.addEventListener("click",(()=>{let o=d.dataset.modalLink;if(void 0!==o){let e=document.getElementById(o);this.showOrHideModal(e)}}));ModalWindowMenu.modalClosers=document.querySelectorAll(e);for(const d of ModalWindowMenu.modalClosers)d.addEventListener("click",(()=>{this.closeModal(d.closest(".modal-window"),!0)}));document.addEventListener("keydown",(o=>{if("Escape"===o.code){let o=document.querySelector(".modal-window.active");this.closeModal(o,!0)}}))}showOrHideModal(o){if(o&&ModalWindowMenu.UNLOCK){let e=document.querySelector(".modal-window.active");e?this.closeModal(e,!1):this.toggleBodyScroll(!1),o.classList.add("active")}o.addEventListener("click",(e=>{e.target.closest(".modal-window__content")||this.closeModal(o,!0)}))}closeModal(o,e){ModalWindowMenu.UNLOCK&&(o.classList.remove("active"),setTimeout((()=>{e&&this.toggleBodyScroll(!0)}),2*ModalWindowMenu.transitionTimeout))}toggleBodyScroll(o){this.chekPossibileSwitchScroll(o)?(document.body.style.paddingRight="0",document.body.classList.remove("scroll-block")):(document.body.style.paddingRight=returnScrollbarWidth()+"px",document.body.classList.add("scroll-block")),ModalWindowMenu.UNLOCK=!1,setTimeout((()=>{ModalWindowMenu.UNLOCK=!0}),2*ModalWindowMenu.transitionTimeout)}chekPossibileSwitchScroll(o){return ModalWindowMenu.fsMenuClasslist?!(ModalWindowMenu.fsMenuClasslist.contains("active")||!o):o}}ModalWindowMenu.UNLOCK=!0;