{
	"arbitrary media query for stylus with braces": {
		"scope": "stylus",
		"prefix": "med",
		"body": [
			"@media (max-width: ${1}px) {",
			"\t$0",
			"}"
		],
	},
	"arbitrary media query from min-width for stylus with braces": {
		"scope": "stylus",
		"prefix": "medmin",
		"body": [
			"@media (min-width: ${1}px) {",
			"\t$0",
			"}"
		],
	},
	"media mobile for stylus with braces": {
		"scope": "stylus",
		"prefix": "medMOB",
		"body": [
			"@media (max-width: ${1|768,426|}px) {",
			"\t$0",
			"}"
		],
	},
	"border": {
		"scope": "stylus",
		"prefix": "bor",
		"body": [
			"border $1px ${2|solid,dashed,dotted,inset|} #${3:};",
		],
	},
	"box shadow": {
		"scope": "stylus",
		"prefix": "bsh",
		"body": [
			"box-shadow ${1:xRight} ${2:yDown} ${3:blur}px rgba(0,0,0,0.${0:color});",
		],
	},
	"flex flow": {
		"scope": "stylus",
		"prefix": "ffl",
		"body": [
			"flex-flow ${1|column,row,column-reverse,row-reverse|} ${2|nowrap,wrap|};",
		],
	},
	"background image": {
		"scope": "stylus",
		"prefix": "bgi",
		"body": [
			"background url('../img/$0') no-repeat center / cover;",
		],
	},
	"flex settings": {
		"scope": "stylus",
		"prefix": "fl",
		"body": [
			"flex ${1:canBigger} ${2:canSmaller} ${0:defaultSize};",
		],
	},
	"stylus variable": {
		"scope": "stylus",
		"prefix": "var",
		"body": [
			"$${1:varName} = ${0:value};",
		],
	},
	"css variable": {
		"scope": "stylus, css",
		"prefix": "cvar",
		"body": [
			"--${1:varName}: $0;",
		],
	},
	"include some css var": {
		"scope": "stylus",
		"prefix": "evar",
		"body": [
			"var(--$0)",
		],
	},
	"hover": {
		"scope": "stylus",
		"prefix": "hov",
		"body": [
			"&:hover {",
			"\t$0",
			"}"
		],
	},
	"active": {
		"scope": "stylus",
		"prefix": "act",
		"body": [
			"&:active {",
			"\t$0",
			"}"
		],
	},
	"focus": {
		"scope": "stylus",
		"prefix": "foc",
		"body": [
			"&:focus {",
			"\t$0",
			"}"
		],
	},
	"hover and focus": {
		"scope": "stylus",
		"prefix": "hovf",
		"body": [
			"&:hover,&:focus {",
			"\t$0",
			"}"
		],
	},
	"active class, hover and focus": {
		"scope": "stylus",
		"prefix": "ahovf",
		"body": [
			"&.active,&:hover,&:focus {",
			"\t$0",
			"}"
		],
	},
	"before": {
		"scope": "stylus",
		"prefix": "befor",
		"body": [
			"&:before {",
			"\tcontent ${1|'',url('')|};",
			"}"
		],
	},
	"after": {
		"scope": "stylus",
		"prefix": "afte",
		"body": [
			"&:after {",
			"\tcontent ${1|'',url('')|};",
			"}"
		],
	},
	"size": {
		"scope": "stylus",
		"prefix": "size",
		"body": [
			"block-size ${1:width} ${0:height};",
		],
		"description": "width and height of object"
	},
	"transition": {
		"scope": "stylus",
		"prefix": "trn",
		"body": [
			"transition all $0s ease;",
		],
	},
	"last child": {
		"scope": "stylus",
		"prefix": "lc",
		"body": [
			"&:last-child {",
			"\t$0",
			"}"
		],
	},
	"first child": {
		"scope": "stylus",
		"prefix": "fc",
		"body": [
			"&:first-child {",
			"\t$0",
			"}"
		],
	},
	"adaptive font size": {
		"scope": "sass, stylus",
		"prefix": "fz",
		"body": [
			"font-size adapt-fsize(${0:layoutSize, min-size});",
		],
	},
	"font property": {
		"scope": "stylus",
		"prefix": "font",
		"body": [
			"font adapt-fsize(${1:layoutSize, min-size}) ${0:fontFamily};",
		],
	},
	"adaptive property": {
		"scope": "stylus",
		"prefix": "aprop",
		"body": [
			"adaptive-property '${1:property}' ${2:value} ${0:min-value};",
		],
	},
	"color": {
		"scope": "stylus",
		"prefix": "col",
		"body": [
			"color #$0;",
		],
	},
	"transform translate": {
		"scope": "stylus",
		"prefix": "trmtranslate",
		"body": [
			"transform translate(${1:xRight}, ${0:yDown});",
		],
	},
	"transform scale": {
		"scope": "stylus",
		"prefix": "trmscale",
		"body": [
			"transform scale(${1:xCoeff}, ${0:yCoeff});",
		],
	},
	"transform rotate": {
		"scope": "stylus",
		"prefix": "trmrotate",
		"body": [
			"transform rotate(${0:degrees}deg);",
		],
	},
	"transform property": {
		"scope": "stylus",
		"prefix": "trm",
		"body": [
			"transform ${1|translate(xy), scale(xy), rotate(deg)|};",
		],
	},
	"adaptive size": {
		"scope": "stylus",
		"prefix": "asize",
		"body": [
			"adaptive-property 'width', ${1:max}, ${2:min};",
			"adaptive-property 'height', ${3:max}, ${0:min};",
		],
	},
	"absolute block centring": {
		"scope": "stylus",
		"prefix": "acenter",
		"body": [
			"top 50%;",
			"left 50%;",
			"transform translate(-50%, -50%);",
		],
	},
	"grid-template stylus": {
		"scope": "stylus",
		"prefix": "gtem",
		"body": [
			"gridTemplate '${1:rowEls}' ${2:rowSize} / ${3:columnCountAndSize};",
		],
	},
	"placeholder": {
		"scope": "stylus",
		"prefix": "place",
		"body": [
			"&::placeholder {",
			"\t$0",
			"}"
		],
	},
	"not last child": {
		"scope": "stylus",
		"prefix": "nlc",
		"body": [
			":not(:last-child) {",
			"\t$0",
			"}"
		],
	},
	"margin for all elements but not for last": {
		"scope": "stylus",
		"prefix": "bmar",
		"body": [
			"firstLevelElementsMargin '${1:side}' $0;",
		],
	},
	"margin-right for all elements but not for last": {
		"scope": "stylus",
		"prefix": "bmarr",
		"body": [
			"firstLevelElementsMargin '${1:right}' $0;",
		],
	},
	"margin-bottom for all elements but not for last": {
		"scope": "stylus",
		"prefix": "bmarb",
		"body": [
			"firstLevelElementsMargin 'bottom' $0;",
		],
	},
	"BEM subclass": {
		"scope": "sass, stylus",
		"prefix": "sclass",
		"body": [
			"&__${1:class} {",
			"\t$0",
			"}"
		],
	},
	"all for position-sticky": {
		"scope": "sass, stylus",
		"prefix": "posst",
		"body": [
			"position sticky;",
			"top $0;",
		],
		"description": "all for position-sticky"
	},
	"flex-set mixin": {
		"scope": "stylus",
		"prefix": "df",
		"body": [
			"flex-set ${1|row,column,column-reverse,row-reverse|} ${2|nowrap,wrap|};",
		],
	},
	"grid-content-position": {
		"scope": "stylus",
		"prefix": "gcp",
		"body": [
			"place-content ${1:align-items} ${0:justify-items};",
		],
	},
	"blurred borders": {
		"scope": "stylus",
		"prefix": "bblur",
		"body": [
			"position relative;",
			"&:before {",
			"\tposition absolute;",
			"\ttop 0;",
			"\tleft 0;",
			"\tblock-size 100%;",
			"\tz-index 2;",
			"\tbox-shadow 0 0 15px rgba(0, 0, 0, 0.2);",
			"\tborder 1px solid #fff;",
			"\tfilter blur(3px);",
			"\tcontent '';",
			"}"
		],
	},
	"selector for first elements of a block": {
		"scope": "stylus",
		"prefix": "fels",
		"body": [
			">* {",
			"\t$0",
			"}"
		],
	},
	"active (not pseudo-class) selector for class": {
		"scope": "stylus",
		"prefix": "sactive",
		"body": [
			"&.active {",
			"\t$0",
			"}"
		],
	},
	"font size in rem": {
		"scope": "stylus",
		"prefix": "fzr",
		"body": [
			"font-size rem($0);",
		],
	},
}